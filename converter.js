// converter.js
function unicodeToNCR(input) {
    var output = '';
    for (var i = 0; i < input.length; i++) {
        output += '&#' + input.charCodeAt(i) + ';';
    }
    return output;
}

function NCRToUnicode(input) {
    return input.replace(/&#(\d+);/g, function(match, numStr) {
        return String.fromCharCode(parseInt(numStr, 10));
    });
}

function convertText(input) {
    // Define your find and replace arrays
    var find = ["&#225;&#250;", "&#225;&#252;", "&#74;&#205;", "&#75;", "&#74;", "&#73;", "&#72;", "&#71;", "&#70;", "&#69;", "&#68;", "&#67;", "&#66;", "&#65;", "&#246;&#80;&#205;", "&#247;&#80;&#245;", "&#246;&#80;&#245;", "&#248;&#80;", "&#247;&#80;", "&#246;&#80;", "&#84;", "&#83;", "&#82;", "&#81;", "&#80;&#245;", "&#85;", "&#80;", "&#246;&#86;&#205;", "&#247;&#86;&#245;", "&#246;&#86;&#245;", "&#248;&#86;", "&#247;&#86;", "&#246;&#86;", "&#90;", "&#89;", "&#88;", "&#87;", "&#86;&#245;", "&#91;", "&#86;", "&#246;&#92;&#205;", "&#247;&#92;&#245;", "&#246;&#92;&#245;", "&#248;&#92;", "&#247;&#92;", "&#246;&#92;", "&#96;", "&#95;", "&#94;", "&#93;", "&#92;&#245;", "&#97;", "&#92;", "&#246;&#98;&#205;", "&#247;&#98;&#245;", "&#246;&#98;&#245;", "&#248;&#98;", "&#247;&#98;", "&#246;&#98;", "&#102;", "&#101;", "&#100;", "&#99;", "&#98;&#245;", "&#103;", "&#98;", "&#246;&#104;&#205;", "&#247;&#104;&#245;", "&#246;&#104;&#245;", "&#248;&#104;", "&#247;&#104;", "&#246;&#104;", "&#108;", "&#107;", "&#106;", "&#105;", "&#104;&#245;", "&#109;", "&#104;", "&#246;&#110;&#205;", "&#247;&#110;&#245;", "&#246;&#110;&#245;", "&#248;&#110;", "&#247;&#110;", "&#246;&#110;", "&#114;", "&#113;", "&#112;", "&#111;", "&#110;&#245;", "&#115;", "&#110;", "&#246;&#117;&#205;", "&#247;&#117;&#245;", "&#246;&#117;&#245;", "&#248;&#117;", "&#247;&#117;", "&#246;&#117;", "&#121;", "&#120;", "&#119;", "&#118;", "&#117;&#245;", "&#122;", "&#117;", "&#246;&#124;&#205;", "&#247;&#124;&#245;", "&#246;&#124;&#245;", "&#248;&#124;", "&#247;&#124;", "&#246;&#124;", "&#161;", "&#126;", "&#125;", "&#123;", "&#124;&#245;", "&#162;", "&#124;", "&#246;&#163;&#205;", "&#247;&#163;&#245;", "&#246;&#163;&#245;", "&#248;&#163;", "&#247;&#163;", "&#246;&#163;", "&#167;", "&#166;", "&#165;", "&#164;", "&#163;&#245;", "&#168;", "&#163;", "&#246;&#169;&#205;", "&#247;&#169;&#245;", "&#246;&#169;&#245;", "&#248;&#169;", "&#247;&#169;", "&#246;&#169;", "&#8240;", "&#8226;", "&#171;", "&#170;", "&#169;&#245;", "&#174;", "&#169;", "&#246;&#175;&#205;", "&#247;&#175;&#245;", "&#246;&#175;&#245;", "&#248;&#175;", "&#247;&#175;", "&#246;&#175;", "&#179;", "&#178;", "&#177;", "&#176;", "&#175;&#245;", "&#180;", "&#175;", "&#246;&#181;&#205;", "&#247;&#181;&#245;", "&#246;&#181;&#245;", "&#248;&#181;", "&#247;&#181;", "&#246;&#181;", "&#185;", "&#184;", "&#376;", "&#8250;", "&#181;&#245;", "&#186;", "&#181;", "&#246;&#187;&#205;", "&#247;&#187;&#245;", "&#246;&#187;&#245;", "&#248;&#187;", "&#247;&#187;", "&#246;&#187;", "&#191;", "&#190;", "&#189;", "&#188;", "&#187;&#245;", "&#192;", "&#187;", "&#246;&#193;&#205;", "&#247;&#193;&#245;", "&#246;&#193;&#245;", "&#248;&#193;", "&#247;&#193;", "&#246;&#193;", "&#197;", "&#196;", "&#195;", "&#194;", "&#193;&#245;", "&#198;", "&#193;", "&#246;&#199;&#205;", "&#247;&#199;&#245;", "&#246;&#199;&#245;", "&#248;&#199;", "&#247;&#199;", "&#246;&#199;", "&#203;", "&#202;", "&#201;", "&#200;", "&#199;&#245;", "&#204;", "&#199;", "&#246;&#205;&#205;", "&#247;&#205;&#245;", "&#246;&#205;&#245;", "&#248;&#205;", "&#247;&#205;", "&#246;&#205;", "&#209;", "&#208;", "&#207;", "&#206;", "&#205;&#245;", "&#210;", "&#205;", "&#246;&#211;&#205;", "&#247;&#211;&#245;", "&#246;&#211;&#245;", "&#248;&#211;", "&#247;&#211;", "&#246;&#211;", "&#215;", "&#214;", "&#213;", "&#212;", "&#211;&#245;", "&#216;", "&#211;", "&#246;&#218;&#205;", "&#247;&#218;&#245;", "&#246;&#218;&#245;", "&#248;&#218;", "&#247;&#218;", "&#246;&#218;", "&#222;", "&#221;", "&#220;", "&#219;", "&#218;&#245;", "&#223;", "&#218;", "&#246;&#8224;&#205;", "&#247;&#8224;&#245;", "&#246;&#8224;&#245;", "&#248;&#8224;", "&#247;&#8224;", "&#246;&#8224;", "&#8224;&#253;", "&#8224;&#251;", "&#8218;", "&#8225;", "&#8224;&#245;", "&#402;", "&#8224;", "&#246;&#225;&#205;", "&#247;&#225;&#245;", "&#246;&#225;&#245;", "&#248;&#225;", "&#247;&#225;", "&#246;&#225;", "&#225;&#253;", "&#225;&#251;", "&#227;", "&#226;", "&#225;&#245;", "&#228;", "&#225;", "&#246;&#229;&#205;", "&#247;&#229;&#245;", "&#246;&#229;&#245;", "&#248;&#229;", "&#247;&#229;", "&#246;&#229;", "&#229;&#253;", "&#229;&#251;", "&#231;", "&#230;", "&#229;&#245;", "&#232;", "&#229;", "&#246;&#233;&#205;", "&#247;&#233;&#245;", "&#246;&#233;&#245;", "&#248;&#233;", "&#247;&#233;", "&#246;&#233;", "&#233;&#253;", "&#233;&#251;", "&#235;", "&#234;", "&#233;&#245;", "&#236;", "&#233;", "&#246;&#237;&#205;", "&#247;&#237;&#245;", "&#246;&#237;&#245;", "&#248;&#237;", "&#247;&#237;", "&#246;&#237;", "&#237;&#253;", "&#237;&#251;", "&#239;", "&#238;", "&#237;&#245;", "&#240;", "&#237;", "&#246;&#241;&#205;", "&#247;&#241;&#245;&#9;", "&#246;&#241;&#245;", "&#248;&#241;&#9;", "&#247;&#241;&#9;", "&#246;&#241;", "&#241;&#253;", "&#241;&#251;&#9;", "&#243;", "&#242;", "&#241;&#245;", "&#244;", "&#9;&#241;&#9;", "&#76;&#225;", "&#76;&#80;", "&#76;&#163;", "&#76;&#193;", "&#76;&#229;", "&#76;&#233;", "&#76;&#237;", "&#76;&#117;", "&#77;&#77;", "&#77;", "&#249;&#249;", "&#249;", "&#38;", "&#76;"]; // Placeholder: Fill with actual patterns
    var replace = ["&#2972;&#3010;", "&#2972;&#3010;", "&#2964;", "&#2963;", "&#2962;", "&#2960;", "&#2959;", "&#2958;", "&#2954;", "&#2953;", "&#2952;", "&#2951;", "&#2950;", "&#2949;", "&#2965;&#3020;", "&#2965;&#3019;", "&#2965;&#3018;", "&#2965;&#3016;", "&#2965;&#3015;", "&#2965;&#3014;", "&#2965;&#3010;", "&#2965;&#3009;", "&#2965;&#3008;", "&#2965;&#3007;", "&#2965;&#3006;", "&#2965;&#3021;", "&#2965;", "&#2969;&#3020;", "&#2969;&#3019;", "&#2969;&#3018;", "&#2969;&#3016;", "&#2969;&#3015;", "&#2969;&#3014;", "&#2969;&#3010;", "&#2969;&#3009;", "&#2969;&#3008;", "&#2969;&#3007;", "&#2969;&#3006;", "&#2969;&#3021;", "&#2969;", "&#2970;&#3020;", "&#2970;&#3019;", "&#2970;&#3018;", "&#2970;&#3016;", "&#2970;&#3015;", "&#2970;&#3014;", "&#2970;&#3010;", "&#2970;&#3009;", "&#2970;&#3008;", "&#2970;&#3007;", "&#2970;&#3006;", "&#2970;&#3021;", "&#2970;", "&#2974;&#3020;", "&#2974;&#3019;", "&#2974;&#3018;", "&#2974;&#3016;", "&#2974;&#3015;", "&#2974;&#3014;", "&#2974;&#3010;", "&#2974;&#3009;", "&#2974;&#3008;", "&#2974;&#3007;", "&#2974;&#3006;", "&#2974;&#3021;", "&#2974;", "&#2975;&#3020;", "&#2975;&#3019;", "&#2975;&#3018;", "&#2975;&#3016;", "&#2975;&#3015;", "&#2975;&#3014;", "&#2975;&#3010;", "&#2975;&#3009;", "&#2975;&#3008;", "&#2975;&#3007;", "&#2975;&#3006;", "&#2975;&#3021;", "&#2975;", "&#2979;&#3020;", "&#2979;&#3019;", "&#2979;&#3018;", "&#2979;&#3016;", "&#2979;&#3015;", "&#2979;&#3014;", "&#2979;&#3010;", "&#2979;&#3009;", "&#2979;&#3008;", "&#2979;&#3007;", "&#2979;&#3006;", "&#2979;&#3021;", "&#2979;", "&#2980;&#3020;", "&#2980;&#3019;", "&#2980;&#3018;", "&#2980;&#3016;", "&#2980;&#3015;", "&#2980;&#3014;", "&#2980;&#3010;", "&#2980;&#3009;", "&#2980;&#3008;", "&#2980;&#3007;", "&#2980;&#3006;", "&#2980;&#3021;", "&#2980;", "&#2984;&#3020;", "&#2984;&#3019;", "&#2984;&#3018;", "&#2984;&#3016;", "&#2984;&#3015;", "&#2984;&#3014;", "&#2984;&#3010;", "&#2984;&#3009;", "&#2984;&#3008;", "&#2984;&#3007;", "&#2984;&#3006;", "&#2984;&#3021;", "&#2984;", "&#2986;&#3020;", "&#2986;&#3019;", "&#2986;&#3018;", "&#2986;&#3016;", "&#2986;&#3015;", "&#2986;&#3014;", "&#2986;&#3010;", "&#2986;&#3009;", "&#2986;&#3008;", "&#2986;&#3007;", "&#2986;&#3006;", "&#2986;&#3021;", "&#2986;", "&#2990;&#3020;", "&#2990;&#3019;", "&#2990;&#3018;", "&#2990;&#3016;", "&#2990;&#3015;", "&#2990;&#3014;", "&#2990;&#3010;", "&#2990;&#3009;", "&#2990;&#3008;", "&#2990;&#3007;", "&#2990;&#3006;", "&#2990;&#3021;", "&#2990;", "&#2991;&#3020;", "&#2991;&#3019;", "&#2991;&#3018;", "&#2991;&#3016;", "&#2991;&#3015;", "&#2991;&#3014;", "&#2991;&#3010;", "&#2991;&#3009;", "&#2991;&#3008;", "&#2991;&#3007;", "&#2991;&#3006;", "&#2991;&#3021;", "&#2991;", "&#2992;&#3020;", "&#2992;&#3019;", "&#2992;&#3018;", "&#2992;&#3016;", "&#2992;&#3015;", "&#2992;&#3014;", "&#2992;&#3010;", "&#2992;&#3009;", "&#2992;&#3008;", "&#2992;&#3007;", "&#2992;&#3006;", "&#2992;&#3021;", "&#2992;", "&#2994;&#3020;", "&#2994;&#3019;", "&#2994;&#3018;", "&#2994;&#3016;", "&#2994;&#3015;", "&#2994;&#3014;", "&#2994;&#3010;", "&#2994;&#3009;", "&#2994;&#3008;", "&#2994;&#3007;", "&#2994;&#3006;", "&#2994;&#3021;", "&#2994;", "&#2997;&#3020;", "&#2997;&#3019;", "&#2997;&#3018;", "&#2997;&#3016;", "&#2997;&#3015;", "&#2997;&#3014;", "&#2997;&#3010;", "&#2997;&#3009;", "&#2997;&#3008;", "&#2997;&#3007;", "&#2997;&#3006;", "&#2997;&#3021;", "&#2997;", "&#2996;&#3020;", "&#2996;&#3019;", "&#2996;&#3018;", "&#2996;&#3016;", "&#2996;&#3015;", "&#2996;&#3014;", "&#2996;&#3010;", "&#2996;&#3009;", "&#2996;&#3008;", "&#2996;&#3007;", "&#2996;&#3006;", "&#2996;&#3021;", "&#2996;", "&#2995;&#3020;", "&#2995;&#3019;", "&#2995;&#3018;", "&#2995;&#3016;", "&#2995;&#3015;", "&#2995;&#3014;", "&#2995;&#3010;", "&#2995;&#3009;", "&#2995;&#3008;", "&#2995;&#3007;", "&#2995;&#3006;", "&#2995;&#3021;", "&#2995;", "&#2993;&#3020;", "&#2993;&#3019;", "&#2993;&#3018;", "&#2993;&#3016;", "&#2993;&#3015;", "&#2993;&#3014;", "&#2993;&#3010;", "&#2993;&#3009;", "&#2993;&#3008;", "&#2993;&#3007;", "&#2993;&#3006;", "&#2993;&#3021;", "&#2993;", "&#2985;&#3020;", "&#2985;&#3019;", "&#2985;&#3018;", "&#2985;&#3016;", "&#2985;&#3015;", "&#2985;&#3014;", "&#2985;&#3010;", "&#2985;&#3009;", "&#2985;&#3008;", "&#2985;&#3007;", "&#2985;&#3006;", "&#2985;&#3021;", "&#2985;", "&#2998;&#3020;", "&#2998;&#3019;", "&#2998;&#3018;", "&#2998;&#3016;", "&#2998;&#3015;", "&#2998;&#3014;", "&#2998;&#3010;", "&#2998;&#3009;", "&#2998;&#3008;", "&#2998;&#3007;", "&#2998;&#3006;", "&#2998;&#3021;", "&#2998;", "&#2972;&#3020;", "&#2972;&#3019;", "&#2972;&#3018;", "&#2972;&#3016;", "&#2972;&#3015;", "&#2972;&#3014;", "&#2972;&#3010;", "&#2972;&#3009;", "&#2972;&#3008;", "&#2972;&#3007;", "&#2972;&#3006;", "&#2972;&#3021;", "&#2972;", "&#2999;&#3020;", "&#2999;&#3019;", "&#2999;&#3018;", "&#2999;&#3016;", "&#2999;&#3015;", "&#2999;&#3014;", "&#2999;&#3010;", "&#2999;&#3009;", "&#2999;&#3008;", "&#2999;&#3007;", "&#2999;&#3006;", "&#2999;&#3021;", "&#2999;", "&#3000;&#3020;", "&#3000;&#3019;", "&#3000;&#3018;", "&#3000;&#3016;", "&#3000;&#3015;", "&#3000;&#3014;", "&#3000;&#3010;", "&#3000;&#3009;", "&#3000;&#3008;", "&#3000;&#3007;", "&#3000;&#3006;", "&#3000;&#3021;", "&#3000;", "&#3001;&#3020;", "&#3001;&#3019;", "&#3001;&#3018;", "&#3001;&#3016;", "&#3001;&#3015;", "&#3001;&#3014;", "&#3001;&#3010;", "&#3001;&#3009;", "&#3001;&#3008;", "&#3001;&#3007;", "&#3001;&#3006;", "&#3001;&#3021;", "&#3001;", "&#2965;&#3021;&#2999;&#3020;", "&#34;&#2965;&#3021;&#2999;&#3019;&#9;&#34;", "&#2965;&#3021;&#2999;&#3018;", "&#34;&#2965;&#3021;&#2999;&#3016;&#9;&#34;", "&#34;&#2965;&#3021;&#2999;&#3015;&#9;&#34;", "&#2965;&#3021;&#2999;&#3014;", "&#2965;&#3021;&#2999;&#3010;", "&#34;&#2965;&#3021;&#2999;&#3009;&#9;&#34;", "&#2965;&#3021;&#2999;&#3008;", "&#2965;&#3021;&#2999;&#3007;", "&#2965;&#3021;&#2999;&#3006;", "&#2965;&#3021;&#2999;&#3021;", "&#34;&#9;&#2965;&#3021;&#2999;&#9;&#34;", "&#2947;&#2972;", "&#2947;&#2965;", "&#2947;&#2986;", "&#2947;&#2997;", "&#2947;&#2999;", "&#2947;&#3000;", "&#2947;&#3001;", "&#2947;&#2980;", "&#34;", "&#39;", "&#34;", "&#39;", "&#45;", "&#2947;" ]; // Placeholder: Fill with actual replacements
    for (var i = 0; i < find.length; i++) {
        var regex = new RegExp(find[i], "g");
        input = input.replace(regex, replace[i]);
    }
    return input;
}
